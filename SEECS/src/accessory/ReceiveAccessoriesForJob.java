/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package accessory;

import componentControl.ComboSearch;
import componentControl.FillComboBox;
import componentControl.ThemesControl;
import componentControl.ValidationValues;
import control.AccessoryControl;
import dataFilesControl.ReadFile;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import model.AccessoriesDetail;
import model.Accessory;

/**
 *
 * @author Amila
 */
public class ReceiveAccessoriesForJob extends javax.swing.JDialog {
    DefaultTableModel dtm;
    JDialog parent;
    ArrayList<AccessoriesDetail> accessoriesDetailList;
    /**
     * Creates new form AddAccessoriesForJob
     */
    public ReceiveAccessoriesForJob(java.awt.Dialog parent, boolean modal,ArrayList<AccessoriesDetail> accessoriesDetailList) {
        super(parent, modal);
        initComponents();
        setBackground();
        this.parent=(JDialog) parent;
        this.accessoriesDetailList=accessoriesDetailList;
        dtm=(DefaultTableModel)tbAccessoriesDetail.getModel();
        FillComboBox.fillComboDatabase(cmbAccessoriesCategoryName, "AccessoriesCategory", "Accessories_Category_Name");
        FillComboBox.fillComboDatabase(cmbAccessoryID, "Accessory", "Accessory_ID");
        FillComboBox.fillComboDatabase(cmbAccessoriesDescription, "Accessory", "Accessory_Description");
        ComboSearch cs=new ComboSearch();
        cs.setSearchableCombo(cmbAccessoriesDescription, true, "No Result");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lbAccessoryDescription = new javax.swing.JLabel();
        txtJobCode = new javax.swing.JTextField();
        cmbAccessoriesDescription = new javax.swing.JComboBox();
        cmbAccessoryID = new javax.swing.JComboBox();
        lbAccessoriesID = new javax.swing.JLabel();
        lbJobCode = new javax.swing.JLabel();
        lbQuantity = new javax.swing.JLabel();
        btRemoveRow = new javax.swing.JButton();
        btaddTable = new javax.swing.JButton();
        spQty = new javax.swing.JSpinner();
        lbAccessoriesCategoryName = new javax.swing.JLabel();
        cmbAccessoriesCategoryName = new javax.swing.JComboBox();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAccessoriesDetail = new javax.swing.JTable();
        btReceiveAccessories = new javax.swing.JButton();
        btBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbAccessoryDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAccessoryDescription.setText("Accessory Description");
        lbAccessoryDescription.setBounds(320, 100, 160, 15);
        jLayeredPane2.add(lbAccessoryDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtJobCode.setEditable(false);
        txtJobCode.setBounds(160, 10, 170, 25);
        jLayeredPane2.add(txtJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbAccessoriesDescription.setEditable(true);
        cmbAccessoriesDescription.setBounds(490, 100, 250, 25);
        jLayeredPane2.add(cmbAccessoriesDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbAccessoryID.setEditable(true);
        cmbAccessoryID.setBounds(120, 100, 170, 25);
        jLayeredPane2.add(cmbAccessoryID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbAccessoriesID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAccessoriesID.setText("Accessory ID");
        lbAccessoriesID.setBounds(20, 100, 100, 15);
        jLayeredPane2.add(lbAccessoriesID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbJobCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbJobCode.setText("Job Code");
        lbJobCode.setBounds(60, 10, 110, 17);
        jLayeredPane2.add(lbJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbQuantity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbQuantity.setText("Quantity");
        lbQuantity.setBounds(770, 100, 90, 20);
        jLayeredPane2.add(lbQuantity, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btRemoveRow.setText("Remove");
        btRemoveRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveRowActionPerformed(evt);
            }
        });
        btRemoveRow.setBounds(690, 140, 120, 30);
        jLayeredPane2.add(btRemoveRow, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btaddTable.setText("Add table");
        btaddTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddTableActionPerformed(evt);
            }
        });
        btaddTable.setBounds(820, 140, 120, 30);
        jLayeredPane2.add(btaddTable, javax.swing.JLayeredPane.DEFAULT_LAYER);
        spQty.setBounds(860, 100, 60, 25);
        jLayeredPane2.add(spQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbAccessoriesCategoryName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAccessoriesCategoryName.setText("Accessories Category Name");
        lbAccessoriesCategoryName.setBounds(20, 50, 190, 20);
        jLayeredPane2.add(lbAccessoriesCategoryName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbAccessoriesCategoryName.setEditable(true);
        cmbAccessoriesCategoryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAccessoriesCategoryNameActionPerformed(evt);
            }
        });
        cmbAccessoriesCategoryName.setBounds(230, 50, 250, 30);
        jLayeredPane2.add(cmbAccessoriesCategoryName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(20, 110, 960, 180);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tbAccessoriesDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accessory Code", "Accessory Description", "Unit Price", "Quantity", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbAccessoriesDetail);

        jScrollPane1.setBounds(0, 0, 960, 190);
        jLayeredPane3.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBounds(20, 310, 960, 190);
        jLayeredPane1.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btReceiveAccessories.setText("Receive Accessories");
        btReceiveAccessories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceiveAccessoriesActionPerformed(evt);
            }
        });
        btReceiveAccessories.setBounds(790, 520, 200, 40);
        jLayeredPane1.add(btReceiveAccessories, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBack.setText("Back");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });
        btBack.setBounds(640, 520, 140, 40);
        jLayeredPane1.add(btBack, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoveRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveRowActionPerformed
       
    }//GEN-LAST:event_btRemoveRowActionPerformed

    private void btReceiveAccessoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceiveAccessoriesActionPerformed
        accessoriesDetailList=receiveAccessories();
        this.dispose();
    }//GEN-LAST:event_btReceiveAccessoriesActionPerformed

    private void btaddTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddTableActionPerformed
        addTable();
    }//GEN-LAST:event_btaddTableActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btBackActionPerformed

    private void cmbAccessoriesCategoryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAccessoriesCategoryNameActionPerformed
        FillComboBox.fillComboComboDatabaseFillter(cmbAccessoryID, "Accessory", "AccessoriesCategory", "Accessory_ID", "Accessories_Category_Name", cmbAccessoriesCategoryName);
        FillComboBox.fillComboComboDatabaseFillter(cmbAccessoriesDescription, "Accessory", "AccessoriesCategory", "Accessory_Name", "Accessories_Category_Name", cmbAccessoriesCategoryName);
    }//GEN-LAST:event_cmbAccessoriesCategoryNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ReceiveAccessoriesForJob dialog = new ReceiveAccessoriesForJob(new javax.swing.JDialog(), true,new ArrayList<AccessoriesDetail>());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btReceiveAccessories;
    private javax.swing.JButton btRemoveRow;
    private javax.swing.JButton btaddTable;
    private javax.swing.JComboBox cmbAccessoriesCategoryName;
    private javax.swing.JComboBox cmbAccessoriesDescription;
    private javax.swing.JComboBox cmbAccessoryID;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAccessoriesCategoryName;
    private javax.swing.JLabel lbAccessoriesID;
    private javax.swing.JLabel lbAccessoryDescription;
    private javax.swing.JLabel lbJobCode;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JSpinner spQty;
    private javax.swing.JTable tbAccessoriesDetail;
    private javax.swing.JTextField txtJobCode;
    // End of variables declaration//GEN-END:variables
    private void setBackground(){
        ThemesControl.setTheme(this,ReadFile.getThemespathinFile());
        setLocationRelativeTo(null);
        final String title="SUMANADASA ELECTRONIC & ELECTRICAL MANAGEMENT SYSTEM";
        setIconImage(new ImageIcon(getClass().getResource("/pictures/Neotech.png")).getImage());
        new Thread(){
            public void run(){
                boolean check=true;
                while (true) {                    
                    for (int i = 0; i < title.length()+1; i++) {
                        setTitle(title.substring(0, i));
                        try {   
                            Thread.sleep(150); 
                        } catch (Exception e) {
                        }
                    }
                    try {   
                        Thread.sleep(800); 
                    } catch (Exception e) {
                    }
                }
           }
        }.start();
    }
    private void addTable(){
        Accessory accessory=new Accessory();
        accessory.setAccessory_ID(cmbAccessoryID.getSelectedItem()+"");
        try {
            accessory=AccessoryControl.viewAccessory(accessory);
        } catch (SQLException ex) {
            Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReceiveAccessoriesForJob.class.getName()).log(Level.SEVERE, null, ex);
        }
        Object[] row={accessory.getAccessory_ID(),accessory.getAccessory_Description(),accessory.getUnit_Issue_Price(),spQty.getValue()};
        dtm.addRow(row);
    }
    private void setTable(){
        
    }
    
    private ArrayList<AccessoriesDetail> receiveAccessories(){
        AccessoriesDetail accessoriesDetail;
        for(int i=0;i<tbAccessoriesDetail.getRowCount();i++){
            accessoriesDetail=new AccessoriesDetail(dtm.getValueAt(i, 0)+"", txtJobCode.getText(),Double.parseDouble(dtm.getValueAt(i, 2)+""), Integer.parseInt(dtm.getValueAt(i, 3)+""), false);
            accessoriesDetailList.add(accessoriesDetail);
        }
        return accessoriesDetailList;
    }
}

