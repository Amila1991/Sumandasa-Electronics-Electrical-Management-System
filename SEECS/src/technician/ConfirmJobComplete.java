/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package technician;

import componentControl.AutoGenerate;
import componentControl.ThemesControl;
import componentControl.ValidationValues;
import control.JobDetailControl;
import dataFilesControl.ReadFile;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.JobDetail;
import model.ServiceItemRemark;

/**
 *
 * @author Amila
 */
public class ConfirmJobComplete extends javax.swing.JDialog {
    DefaultListModel<String> dlm;
    JobDetail jobDetail;
    /**
     * Creates new form ConfirmJobComplete
     */
    public ConfirmJobComplete(java.awt.Frame parent, boolean modal,JobDetail jobDetail) {
        super(parent, modal);
        initComponents();
        setBackground();
        this.jobDetail=jobDetail;
        dlm=new DefaultListModel<String>();
        viewJobDetail();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lbJobCode = new javax.swing.JLabel();
        lbJobDescription = new javax.swing.JLabel();
        txtJobDescription = new javax.swing.JTextField();
        txtJobCode = new javax.swing.JTextField();
        lbAddItemRemark = new javax.swing.JLabel();
        txtAddItemRemark = new javax.swing.JTextField();
        btmoveJobRemark = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listItemRemark = new javax.swing.JList();
        btConfirmComplete = new javax.swing.JButton();
        btBack = new javax.swing.JButton();
        lbWorkManHours = new javax.swing.JLabel();
        txtWorkManHours = new javax.swing.JTextField();
        txtJobExpensesCharges = new javax.swing.JTextField();
        lbJobExpensesCharges = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbJobCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbJobCode.setText("Job Code");
        lbJobCode.setBounds(40, 30, 110, 15);
        jLayeredPane2.add(lbJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbJobDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbJobDescription.setText("Job Description");
        lbJobDescription.setBounds(40, 70, 120, 15);
        jLayeredPane2.add(lbJobDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtJobDescription.setEditable(false);
        txtJobDescription.setBounds(170, 70, 470, 25);
        jLayeredPane2.add(txtJobDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtJobCode.setEditable(false);
        txtJobCode.setBounds(170, 30, 120, 25);
        jLayeredPane2.add(txtJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbAddItemRemark.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAddItemRemark.setText("Add Item Remark");
        lbAddItemRemark.setBounds(40, 170, 120, 15);
        jLayeredPane2.add(lbAddItemRemark, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtAddItemRemark.setBounds(40, 210, 320, 25);
        jLayeredPane2.add(txtAddItemRemark, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btmoveJobRemark.setText(">>");
        btmoveJobRemark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmoveJobRemarkActionPerformed(evt);
            }
        });
        btmoveJobRemark.setBounds(380, 200, 50, 40);
        jLayeredPane2.add(btmoveJobRemark, javax.swing.JLayeredPane.DEFAULT_LAYER);

        listItemRemark.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Remark"));
        jScrollPane1.setViewportView(listItemRemark);

        jScrollPane1.setBounds(460, 150, 450, 130);
        jLayeredPane2.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btConfirmComplete.setText("Confirm Complete");
        btConfirmComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmCompleteActionPerformed(evt);
            }
        });
        btConfirmComplete.setBounds(800, 380, 150, 30);
        jLayeredPane2.add(btConfirmComplete, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBack.setText("Back");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });
        btBack.setBounds(670, 380, 110, 30);
        jLayeredPane2.add(btBack, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbWorkManHours.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbWorkManHours.setText("Work Man Hours");
        lbWorkManHours.setBounds(30, 290, 130, 15);
        jLayeredPane2.add(lbWorkManHours, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtWorkManHours.setAutoscrolls(false);
        txtWorkManHours.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWorkManHoursKeyReleased(evt);
            }
        });
        txtWorkManHours.setBounds(210, 290, 130, 25);
        jLayeredPane2.add(txtWorkManHours, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtJobExpensesCharges.setAutoscrolls(false);
        txtJobExpensesCharges.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJobExpensesChargesFocusLost(evt);
            }
        });
        txtJobExpensesCharges.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtJobExpensesChargesKeyReleased(evt);
            }
        });
        txtJobExpensesCharges.setBounds(210, 330, 180, 25);
        jLayeredPane2.add(txtJobExpensesCharges, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbJobExpensesCharges.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbJobExpensesCharges.setText("Job Expenses Charges");
        lbJobExpensesCharges.setBounds(30, 330, 160, 15);
        jLayeredPane2.add(lbJobExpensesCharges, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(20, 120, 960, 420);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btmoveJobRemarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmoveJobRemarkActionPerformed
        dlm.addElement(txtAddItemRemark.getText());
        listItemRemark.setModel(dlm);
        txtAddItemRemark.setText("");
        txtAddItemRemark.requestFocus();
    }//GEN-LAST:event_btmoveJobRemarkActionPerformed

    private void btConfirmCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmCompleteActionPerformed
        confirmJobComplete();
   }//GEN-LAST:event_btConfirmCompleteActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        setDateTime();
    }//GEN-LAST:event_btBackActionPerformed

    private void txtWorkManHoursKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWorkManHoursKeyReleased
        ValidationValues.ValidateIntValue(txtWorkManHours);
    }//GEN-LAST:event_txtWorkManHoursKeyReleased

    private void txtJobExpensesChargesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJobExpensesChargesKeyReleased
        ValidationValues.ValidateDoubleValues(txtJobExpensesCharges);
    }//GEN-LAST:event_txtJobExpensesChargesKeyReleased

    private void txtJobExpensesChargesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJobExpensesChargesFocusLost
        if (txtJobExpensesCharges.getText().trim().isEmpty()) {
            txtJobExpensesCharges.setText("0.00");
        }else{
            ValidationValues.ValidateCurrency(txtJobExpensesCharges);
        }
    }//GEN-LAST:event_txtJobExpensesChargesFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmJobComplete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmJobComplete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmJobComplete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmJobComplete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ConfirmJobComplete dialog = new ConfirmJobComplete(new javax.swing.JFrame(), true,new JobDetail());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btConfirmComplete;
    private javax.swing.JButton btmoveJobRemark;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAddItemRemark;
    private javax.swing.JLabel lbJobCode;
    private javax.swing.JLabel lbJobDescription;
    private javax.swing.JLabel lbJobExpensesCharges;
    private javax.swing.JLabel lbWorkManHours;
    private javax.swing.JList listItemRemark;
    private javax.swing.JTextField txtAddItemRemark;
    private javax.swing.JTextField txtJobCode;
    private javax.swing.JTextField txtJobDescription;
    private javax.swing.JTextField txtJobExpensesCharges;
    private javax.swing.JTextField txtWorkManHours;
    // End of variables declaration//GEN-END:variables
    private void setBackground(){
        ThemesControl.setTheme(this,ReadFile.getThemespathinFile());
        setLocationRelativeTo(null);
        final String title="SUMANADASA ELECTRONIC & ELECTRICAL MANAGEMENT SYSTEM";
        setIconImage(new ImageIcon(getClass().getResource("/pictures/Neotech.png")).getImage());
        new Thread(){
            public void run(){
                boolean check=true;
                while (true) {                    
                    for (int i = 0; i < title.length()+1; i++) {
                        setTitle(title.substring(0, i));
                        try {   
                            Thread.sleep(150); 
                        } catch (Exception e) {
                        }
                    }
                    try {   
                        Thread.sleep(800); 
                    } catch (Exception e) {
                    }
                }
           }
        }.start();
    }
    private void viewJobDetail(){
        txtJobCode.setText(jobDetail.getJob_Code());
        txtJobDescription.setText(jobDetail.getJob_Deficiency());
    }
    private void confirmJobComplete(){
        jobDetail.setFinish_Date(setDateTime());
        jobDetail.setJob_Expenses_Charges(Double.parseDouble(txtJobExpensesCharges.getText()));
        jobDetail.setWork_Man_Hours(Integer.parseInt(txtWorkManHours.getText()));
        ArrayList<ServiceItemRemark> itemRemarkList=new ArrayList<ServiceItemRemark>();
        ServiceItemRemark itemRemark=null;
        int i=Integer.parseInt(AutoGenerate.getNextID("ItemRemarks ir Where Item_Code='"+jobDetail.getItem_Code()+"'", "Item_Remark_No", ""));
        System.out.println(i);
        System.out.println(jobDetail.getItem_Code());
        for (i=i-1;i<dlm.getSize();i++) {
            System.out.println(i);
            itemRemark=new ServiceItemRemark(i+1, dlm.get(i),jobDetail.getItem_Code());
            itemRemarkList.add(itemRemark);
        }
        int res=JOptionPane.showConfirmDialog(this, "You want to finish Job ?","Confirm Job Finished",JOptionPane.YES_OPTION, JOptionPane.YES_NO_OPTION);
        if (res==JOptionPane.YES_OPTION) {
            try {
                res=JobDetailControl.addJobCompleteConfirm(jobDetail,itemRemarkList);
                if (res==1) {
                    JOptionPane.showMessageDialog(this, "You're Operation Success...", "Success", JOptionPane.OK_OPTION);
                    this.dispose();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ConfirmJobComplete.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ConfirmJobComplete.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    private String setDateTime(){
       SimpleDateFormat SDF=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
       String Date=SDF.format(Calendar.getInstance().getTime());
       System.out.println(Date);
       return Date;
    }
    
    
}
