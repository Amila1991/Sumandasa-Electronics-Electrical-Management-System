/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package technician;

import componentControl.AutoGenerate;
import componentControl.FillComboBox;
import componentControl.ThemesControl;
import control.JobDetailControl;
import dataFilesControl.ReadFile;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import model.ServiceItem;
import model.JobCurrentState;
import model.ServiceOrder;

/**
 *
 * @author Amila
 */
public class AddJobStates extends javax.swing.JDialog {
    ServiceItem item;
    ArrayList<JobCurrentState> jobCurrentStateNewList=new ArrayList<JobCurrentState>();
    DefaultListModel<String> dlmCurrent;
    DefaultListModel<String> dlmNew;
    /**
     * Creates new form AddJobStates
     */
    public AddJobStates(java.awt.Frame parent, boolean modal,ServiceItem item) {
        super(parent, modal);
        initComponents();
        this.item=item;
        dlmCurrent=new DefaultListModel<String>();
        dlmNew=new DefaultListModel<String>();
        viewServiceOrder();
        checkAddBt();
        comboControl(cmbJobCode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lbItemDescrription = new javax.swing.JLabel();
        txtItemSetviceOrderID = new javax.swing.JTextField();
        lbJobCode = new javax.swing.JLabel();
        cmbJobCode = new javax.swing.JComboBox();
        btView = new javax.swing.JButton();
        lbServiceOrderID = new javax.swing.JLabel();
        txtItemDescription = new javax.swing.JTextField();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        newStatesList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        CurrentStatesList = new javax.swing.JList();
        txtAddStates = new javax.swing.JTextField();
        btmoveNewStates = new javax.swing.JButton();
        lbNewStates = new javax.swing.JLabel();
        btBack = new javax.swing.JButton();
        btSubmitStates1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Job Detail"));

        lbItemDescrription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemDescrription.setText("Item Descrription");
        lbItemDescrription.setBounds(20, 100, 150, 15);
        jLayeredPane2.add(lbItemDescrription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtItemSetviceOrderID.setEditable(false);
        txtItemSetviceOrderID.setBounds(190, 20, 160, 25);
        jLayeredPane2.add(txtItemSetviceOrderID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbJobCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbJobCode.setText("Job Code");
        lbJobCode.setBounds(20, 60, 100, 15);
        jLayeredPane2.add(lbJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbJobCode.setEditable(true);
        cmbJobCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbJobCodeKeyReleased(evt);
            }
        });
        cmbJobCode.setBounds(190, 60, 160, 25);
        jLayeredPane2.add(cmbJobCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btView.setText("View");
        btView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btViewActionPerformed(evt);
            }
        });
        btView.setBounds(370, 60, 110, 30);
        jLayeredPane2.add(btView, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbServiceOrderID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbServiceOrderID.setText("Service Order ID");
        lbServiceOrderID.setBounds(20, 20, 140, 15);
        jLayeredPane2.add(lbServiceOrderID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtItemDescription.setEditable(false);
        txtItemDescription.setBounds(190, 100, 450, 25);
        jLayeredPane2.add(txtItemDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(30, 80, 940, 140);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Job States"));

        newStatesList.setBorder(javax.swing.BorderFactory.createTitledBorder("New States"));
        jScrollPane1.setViewportView(newStatesList);

        jScrollPane1.setBounds(120, 200, 710, 70);
        jLayeredPane3.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        CurrentStatesList.setBorder(javax.swing.BorderFactory.createTitledBorder("CurrentStates"));
        jScrollPane2.setViewportView(CurrentStatesList);

        jScrollPane2.setBounds(110, 20, 710, 90);
        jLayeredPane3.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtAddStates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddStatesActionPerformed(evt);
            }
        });
        txtAddStates.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddStatesKeyReleased(evt);
            }
        });
        txtAddStates.setBounds(70, 160, 280, 25);
        jLayeredPane3.add(txtAddStates, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btmoveNewStates.setText(">>");
        btmoveNewStates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmoveNewStatesActionPerformed(evt);
            }
        });
        btmoveNewStates.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btmoveNewStatesKeyReleased(evt);
            }
        });
        btmoveNewStates.setBounds(370, 160, 49, 30);
        jLayeredPane3.add(btmoveNewStates, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbNewStates.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbNewStates.setText("Enter New State");
        lbNewStates.setBounds(30, 130, 170, 15);
        jLayeredPane3.add(lbNewStates, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBounds(30, 220, 940, 290);
        jLayeredPane1.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btBack.setText("Back");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });
        btBack.setBounds(680, 520, 140, 40);
        jLayeredPane1.add(btBack, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btSubmitStates1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btSubmitStates1.setText("Submit States");
        btSubmitStates1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubmitStates1ActionPerformed(evt);
            }
        });
        btSubmitStates1.setBounds(830, 520, 140, 40);
        jLayeredPane1.add(btSubmitStates1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbJobCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbJobCodeKeyReleased

   }//GEN-LAST:event_cmbJobCodeKeyReleased

    private void txtAddStatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddStatesActionPerformed

   }//GEN-LAST:event_txtAddStatesActionPerformed

    private void txtAddStatesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddStatesKeyReleased
        checkAddBt();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtAddStates.getText().trim().isEmpty()) {
                addList();
                checkAddBt();
            }
        }
    }//GEN-LAST:event_txtAddStatesKeyReleased

    private void btmoveNewStatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmoveNewStatesActionPerformed
        addList();
        checkAddBt();
    }//GEN-LAST:event_btmoveNewStatesActionPerformed

    private void btmoveNewStatesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btmoveNewStatesKeyReleased
        checkAddBt();
    }//GEN-LAST:event_btmoveNewStatesKeyReleased

    private void btViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btViewActionPerformed
        viewJobStates();
    }//GEN-LAST:event_btViewActionPerformed

    private void btSubmitStates1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubmitStates1ActionPerformed
        addStates();
    }//GEN-LAST:event_btSubmitStates1ActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddJobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddJobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddJobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddJobStates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AddJobStates dialog = new AddJobStates(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList CurrentStatesList;
    private javax.swing.JButton btBack;
    private javax.swing.JButton btSubmitStates1;
    private javax.swing.JButton btView;
    private javax.swing.JButton btmoveNewStates;
    private javax.swing.JComboBox cmbJobCode;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbItemDescrription;
    private javax.swing.JLabel lbJobCode;
    private javax.swing.JLabel lbNewStates;
    private javax.swing.JLabel lbServiceOrderID;
    private javax.swing.JList newStatesList;
    private javax.swing.JTextField txtAddStates;
    private javax.swing.JTextField txtItemDescription;
    private javax.swing.JTextField txtItemSetviceOrderID;
    // End of variables declaration//GEN-END:variables
    private void setBackground(){
        ThemesControl.setTheme(this,ReadFile.getThemespathinFile());
        setLocationRelativeTo(null);
        final String title="SUMANADASA ELECTRONIC & ELECTRICAL MANAGEMENT SYSTEM";
        setIconImage(new ImageIcon(getClass().getResource("/pictures/Neotech.png")).getImage());
        new Thread(){
            public void run(){
                boolean check=true;
                while (true) {                    
                    for (int i = 0; i < title.length()+1; i++) {
                        setTitle(title.substring(0, i));
                        try {   
                            Thread.sleep(150); 
                        } catch (Exception e) {
                        }
                    }
                    try {   
                        Thread.sleep(800); 
                    } catch (Exception e) {
                    }
                }
           }
        }.start();
    }
    private void viewServiceOrder(){
        txtItemSetviceOrderID.setText(item.getService_Order_ID());
        txtItemDescription.setText(item.getDescription());
        FillComboBox.fillComboDatabase(cmbJobCode, "Item i NATURAL JOIN JobDetail jd where i.Service_Order_ID='"+item.getService_Order_ID()+"'", "Job_Code");
    }
    private void viewJobStates(){
        JobCurrentState jobCurrentState=new JobCurrentState();
        jobCurrentState.setJob_Code(cmbJobCode.getSelectedItem()+"");
        ArrayList<JobCurrentState> jobCurrentStateList=null;
        try {
            jobCurrentStateList=JobDetailControl.viewJobCurrentState(jobCurrentState);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddJobStates.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddJobStates.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (JobCurrentState jobCurrentState1 : jobCurrentStateList) {
            String text=jobCurrentState1.getState_Add_Date()+" - "+jobCurrentState1.getCurrent_State_Description();
            dlmCurrent.addElement(text);
        }
        CurrentStatesList.setModel(dlmCurrent);
    }
    
    private void addList(){
        int index=Integer.parseInt(AutoGenerate.getNextIDLoop("JobCurrentState", "Current_State_Code", "", dlmNew.getSize()));
        JobCurrentState jobCurrentState=new JobCurrentState(index, txtAddStates.getText(), setDateTime(), cmbJobCode.getSelectedItem()+"");
        jobCurrentStateNewList.add(jobCurrentState);
        String text=jobCurrentState.getState_Add_Date()+" - "+jobCurrentState.getCurrent_State_Description();
        dlmNew.addElement(text);
        newStatesList.setModel(dlmNew);
        txtAddStates.setText("");
        txtAddStates.requestFocus();
    }
    private String setDateTime(){
       SimpleDateFormat SDF=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
       String Date=SDF.format(Calendar.getInstance().getTime());
       System.out.println(Date);
       return Date;
    }
    
    private void addStates(){
        try {
            int res=JobDetailControl.addJobStates(jobCurrentStateNewList);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddJobStates.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddJobStates.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtAddStates.setText("");
        dlmCurrent=new DefaultListModel<String>();
        dlmNew=new DefaultListModel<String>();
        newStatesList.setModel(dlmNew);
        viewJobStates();
    }
    private void checkAddBt(){
        if (newStatesList.getModel().getSize()==0) {
            btSubmitStates1.setEnabled(false);
        }else{
            btSubmitStates1.setEnabled(true);
        }
        if(txtAddStates.getText().trim().isEmpty()){
            btmoveNewStates.setEnabled(false);
        }else{
            btmoveNewStates.setEnabled(true);
        }
    }
    private void comboControl(JComboBox controlcmb){
        JTextField txt = (JTextField) controlcmb.getEditor().getEditorComponent();
        txt.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    viewJobStates();
                }
            }
        });
    }
}
