/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package setting;

import connection.DBConnectionControl;
import dataFilesControl.ReadFile;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Amila
 */
public class DatabaseBackupRestore extends javax.swing.JPanel {
    ConfigurationMain configurationMain;
    JPanel pan;
    /**
     * Creates new form DatabaseBackupRestore
     */
    public DatabaseBackupRestore(ConfigurationMain configurationMain,JPanel pan) {
        initComponents();
        this.configurationMain=configurationMain;
        this.pan=pan;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lbFileName = new javax.swing.JLabel();
        txtFileName = new javax.swing.JTextField();
        txtPath = new javax.swing.JTextField();
        lbPath = new javax.swing.JLabel();
        btBrowse = new javax.swing.JButton();
        btGetDatabaseBackup = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        txtPathOpen = new javax.swing.JTextField();
        lbPath2 = new javax.swing.JLabel();
        btBrowseOpen = new javax.swing.JButton();
        btSetDatabaseRestore = new javax.swing.JButton();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        lbFileName2 = new javax.swing.JLabel();
        txtDatabaseName = new javax.swing.JTextField();
        btGetDatabaseBackup2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();

        setOpaque(false);

        lbFileName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbFileName.setText("File Name");
        lbFileName.setBounds(20, 50, 80, 20);
        jLayeredPane2.add(lbFileName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtFileName.setBounds(110, 50, 180, 25);
        jLayeredPane2.add(txtFileName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPath.setEditable(false);
        txtPath.setBounds(110, 80, 340, 25);
        jLayeredPane2.add(txtPath, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbPath.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPath.setText("Path");
        lbPath.setBounds(20, 80, 80, 20);
        jLayeredPane2.add(lbPath, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBrowse.setText("Browse");
        btBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBrowseActionPerformed(evt);
            }
        });
        btBrowse.setBounds(490, 80, 90, 30);
        jLayeredPane2.add(btBrowse, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btGetDatabaseBackup.setText("Get Database Backup");
        btGetDatabaseBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGetDatabaseBackupActionPerformed(evt);
            }
        });
        btGetDatabaseBackup.setBounds(470, 130, 160, 30);
        jLayeredPane2.add(btGetDatabaseBackup, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(20, 170, 700, 160);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPathOpen.setEditable(false);
        txtPathOpen.setBounds(110, 40, 340, 25);
        jLayeredPane4.add(txtPathOpen, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbPath2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPath2.setText("Path");
        lbPath2.setBounds(20, 40, 80, 20);
        jLayeredPane4.add(lbPath2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBrowseOpen.setText("Browse");
        btBrowseOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBrowseOpenActionPerformed(evt);
            }
        });
        btBrowseOpen.setBounds(490, 40, 90, 30);
        jLayeredPane4.add(btBrowseOpen, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btSetDatabaseRestore.setText("Set Database Restore");
        btSetDatabaseRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSetDatabaseRestoreActionPerformed(evt);
            }
        });
        btSetDatabaseRestore.setBounds(480, 90, 160, 30);
        jLayeredPane4.add(btSetDatabaseRestore, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBounds(20, 360, 700, 140);
        jLayeredPane1.add(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbFileName2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbFileName2.setText("Database Name");
        lbFileName2.setBounds(30, 50, 130, 20);
        jLayeredPane5.add(lbFileName2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtDatabaseName.setBounds(180, 50, 180, 25);
        jLayeredPane5.add(txtDatabaseName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btGetDatabaseBackup2.setText("Create Database");
        btGetDatabaseBackup2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGetDatabaseBackup2ActionPerformed(evt);
            }
        });
        btGetDatabaseBackup2.setBounds(420, 50, 160, 30);
        jLayeredPane5.add(btGetDatabaseBackup2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane5.setBounds(10, 50, 700, 100);
        jLayeredPane1.add(jLayeredPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator2.setBounds(10, 340, 720, 10);
        jLayeredPane1.add(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator1.setBounds(10, 150, 720, 10);
        jLayeredPane1.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btBrowseOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBrowseOpenActionPerformed
        JFileChooser jc=new JFileChooser();
        jc.setFileSelectionMode(JFileChooser.OPEN_DIALOG);
        int res=jc.showOpenDialog(pan);
        if(res==0){
            String path=jc.getSelectedFile().getPath();
            txtPathOpen.setText(path);
        }
    }//GEN-LAST:event_btBrowseOpenActionPerformed

    private void btSetDatabaseRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSetDatabaseRestoreActionPerformed
        try {
            Process p= Runtime.getRuntime().exec(setRestoreBatFile());
            try {
                if(p.waitFor()==0){
                    JOptionPane.showMessageDialog(null,"Restore Completed...");
                }
                else{
                      JOptionPane.showMessageDialog(null,"Restore not Completed... ");
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(DatabaseBackupRestore.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(pan, ex.getMessage());
        }
    }//GEN-LAST:event_btSetDatabaseRestoreActionPerformed

    private void btGetDatabaseBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGetDatabaseBackupActionPerformed
        try {
            Process p= Runtime.getRuntime().exec(setBackupBatFile());
            try {
                if(p.waitFor()==0){
                    JOptionPane.showMessageDialog(null,"Backup Completed...");
                }
                else{
                      JOptionPane.showMessageDialog(null,"Backup not Completed... ");
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(DatabaseBackupRestore.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(pan, ex.getMessage());
        }
    }//GEN-LAST:event_btGetDatabaseBackupActionPerformed

    private void btBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBrowseActionPerformed
        JFileChooser jc = new JFileChooser();
        jc.setFileSelectionMode(JFileChooser.SAVE_DIALOG);
        int res = jc.showSaveDialog(pan);
        if (res == 0) {
            String path = jc.getSelectedFile().getPath();
            txtPath.setText(path);
        }

    }//GEN-LAST:event_btBrowseActionPerformed

    private void btGetDatabaseBackup2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGetDatabaseBackup2ActionPerformed
        createDatabase();
    }//GEN-LAST:event_btGetDatabaseBackup2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBrowse;
    private javax.swing.JButton btBrowseOpen;
    private javax.swing.JButton btGetDatabaseBackup;
    private javax.swing.JButton btGetDatabaseBackup2;
    private javax.swing.JButton btSetDatabaseRestore;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbFileName;
    private javax.swing.JLabel lbFileName2;
    private javax.swing.JLabel lbPath;
    private javax.swing.JLabel lbPath2;
    private javax.swing.JTextField txtDatabaseName;
    private javax.swing.JTextField txtFileName;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtPathOpen;
    // End of variables declaration//GEN-END:variables
    private String setBackupBatFile(){
        String fileName=txtFileName.getText();
        String path=txtPath.getText();
        String command="cmd /c mysqldump SumanadasaElectricalService -h "+ReadFile.getUsingHost()+" -u "+ReadFile.getDBConnectionpathinFile().get("USER")+" -p"+ReadFile.getDBConnectionpathinFile().get("PASSWORD")+">"+path+"\\"+fileName+".txt";
        return command;
    }
    
    private String setRestoreBatFile(){
        String path=txtPathOpen.getText();
        String command="cmd /c mysql SumanadasaElectricalService -h "+ReadFile.getUsingHost()+" -u "+ReadFile.getDBConnectionpathinFile().get("USER")+" -p"+ReadFile.getDBConnectionpathinFile().get("PASSWORD")+"<"+path;
        return command;
    }
    private void clear(){
        
    }
    
    private void createDatabase(){
        String databaseName=txtDatabaseName.getText();
        try {
            boolean create=DBConnectionControl.createDatabase(ReadFile.getFileData("ConnectionClass.txt"),ReadFile.getFileData("ConnectionDriver.txt"),ReadFile.getFileData("UsingHost.txt"), ReadFile.getDBConnectionpathinFile().get("USER"), ReadFile.getDBConnectionpathinFile().get("PASSWORD"), databaseName);
            if(create){
                JOptionPane.showConfirmDialog(configurationMain, "Database Created.....", "Success", JOptionPane.OK_OPTION);
            }else{
                JOptionPane.showConfirmDialog(configurationMain, "Database Create fail.....", "Fail", JOptionPane.OK_OPTION);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatabaseBackupRestore.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DatabaseBackupRestore.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
