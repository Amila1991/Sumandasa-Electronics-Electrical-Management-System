/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cashier;

import grn.*;
import componentControl.AutoGenerate;
import componentControl.ComboSearch;
import componentControl.FillComboBox;
import control.SalesItemControl;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.SalesItem;
import model.SalesItemType;

/**
 *
 * @author Amila
 */
public class AddStock extends javax.swing.JPanel {

    ArrayList<SalesItem> updatesalesItemList = new ArrayList<SalesItem>();
    DefaultTableModel dtm;
    GRN grn;
    AddGRN addGRN;
    JPanel pan;
    double totalAmount;
    CashierMain cashierMain;
    AddNewItem addNewItem;

    /**
     * Creates new form AddNewItem
     */
    public AddStock(GRN grn, JPanel pan) {
        initComponents();
        this.grn = grn;
        this.pan = pan;
        dtm = (DefaultTableModel) tbSalesItem.getModel();
        clear();
        ComboSearch cs = new ComboSearch();
        cs.setSearchableCombo(cmbModelNo, true, "No Model");
    }

    public AddStock(CashierMain cashierMain, JPanel pan) {
        initComponents();
        this.pan = pan;
        this.cashierMain=cashierMain;
        dtm = (DefaultTableModel) tbSalesItem.getModel();
        clear();
        ComboSearch cs = new ComboSearch();
        cs.setSearchableCombo(cmbModelNo, true, "No Model");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        lbModelNo = new javax.swing.JLabel();
        lbUnitPurchasePrice = new javax.swing.JLabel();
        lbWarrenty = new javax.swing.JLabel();
        txtWarranty = new javax.swing.JTextField();
        lbUnitIssuePrice = new javax.swing.JLabel();
        txtUnitIssuePrice = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        lbDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        cmbModelNo = new javax.swing.JComboBox();
        txtUnitPurchasePrice = new javax.swing.JTextField();
        lbUnitIssuePrice1 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lbUnitIssuePrice2 = new javax.swing.JLabel();
        txtCurrentQty = new javax.swing.JTextField();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSalesItem = new javax.swing.JTable();
        btaddSalesItemtoDB = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setOpaque(false);

        jLayeredPane3.setBounds(30, 280, 0, 0);
        jLayeredPane1.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbModelNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbModelNo.setText("Model No");
        lbModelNo.setBounds(10, 10, 170, 15);
        jLayeredPane4.add(lbModelNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbUnitPurchasePrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitPurchasePrice.setText("Unit Purchase Price");
        lbUnitPurchasePrice.setBounds(20, 80, 130, 15);
        jLayeredPane4.add(lbUnitPurchasePrice, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbWarrenty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbWarrenty.setText("Warranty");
        lbWarrenty.setBounds(370, 80, 100, 15);
        jLayeredPane4.add(lbWarrenty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtWarranty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtWarranty.setBounds(500, 70, 180, 30);
        jLayeredPane4.add(txtWarranty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbUnitIssuePrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitIssuePrice.setText("Unit Issue Price");
        lbUnitIssuePrice.setBounds(20, 130, 100, 15);
        jLayeredPane4.add(lbUnitIssuePrice, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtUnitIssuePrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtUnitIssuePrice.setBounds(150, 120, 180, 30);
        jLayeredPane4.add(txtUnitIssuePrice, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btAdd.setText("Add Table");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });
        btAdd.setBounds(880, 170, 110, 30);
        jLayeredPane4.add(btAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbDescription.setText("Description");
        lbDescription.setBounds(300, 10, 110, 15);
        jLayeredPane4.add(lbDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtDescription.setEditable(false);
        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });
        txtDescription.setBounds(320, 30, 490, 30);
        jLayeredPane4.add(txtDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbModelNo.setEditable(true);
        cmbModelNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModelNoItemStateChanged(evt);
            }
        });
        cmbModelNo.setBounds(40, 30, 220, 30);
        jLayeredPane4.add(cmbModelNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtUnitPurchasePrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtUnitPurchasePrice.setBounds(150, 70, 180, 30);
        jLayeredPane4.add(txtUnitPurchasePrice, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbUnitIssuePrice1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitIssuePrice1.setText("Quantity");
        lbUnitIssuePrice1.setBounds(370, 130, 100, 15);
        jLayeredPane4.add(lbUnitIssuePrice1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtQty.setBounds(500, 120, 180, 30);
        jLayeredPane4.add(txtQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("New Item");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(890, 80, 120, 30);
        jLayeredPane4.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbUnitIssuePrice2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitIssuePrice2.setText("Current Quantity");
        lbUnitIssuePrice2.setBounds(830, 10, 130, 15);
        jLayeredPane4.add(lbUnitIssuePrice2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtCurrentQty.setEditable(false);
        txtCurrentQty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCurrentQty.setBounds(880, 30, 180, 30);
        jLayeredPane4.add(txtCurrentQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBounds(10, 60, 1080, 210);
        jLayeredPane1.add(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setMinimumSize(new java.awt.Dimension(960, 400));
        jLayeredPane2.setPreferredSize(new java.awt.Dimension(960, 500));

        tbSalesItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model No", "Description", "Qty", "Unit Purchase Price", "Unit Issue Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbSalesItem);
        tbSalesItem.getColumnModel().getColumn(0).setPreferredWidth(150);
        tbSalesItem.getColumnModel().getColumn(1).setPreferredWidth(300);
        tbSalesItem.getColumnModel().getColumn(2).setPreferredWidth(50);
        tbSalesItem.getColumnModel().getColumn(3).setPreferredWidth(150);
        tbSalesItem.getColumnModel().getColumn(4).setPreferredWidth(150);
        tbSalesItem.getColumnModel().getColumn(5).setPreferredWidth(150);

        jScrollPane1.setBounds(20, 10, 1040, 200);
        jLayeredPane2.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btaddSalesItemtoDB.setText("Submit");
        btaddSalesItemtoDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddSalesItemtoDBActionPerformed(evt);
            }
        });
        btaddSalesItemtoDB.setBounds(950, 290, 120, 40);
        jLayeredPane2.add(btaddSalesItemtoDB, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btRemove.setText("Remove");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });
        btRemove.setBounds(910, 220, 110, 20);
        jLayeredPane2.add(btRemove, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btBack.setText("Back");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });
        btBack.setBounds(820, 290, 110, 40);
        jLayeredPane2.add(btBack, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(10, 290, 1080, 350);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Andalus", 1, 32)); // NOI18N
        jLabel3.setText("Add Stock");
        jLabel3.setBounds(30, 0, 250, 50);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        addTable();
    }//GEN-LAST:event_btAddActionPerformed

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void cmbModelNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModelNoItemStateChanged
        SalesItem salesItem = new SalesItem();
        try {
            salesItem = SalesItemControl.getSalesItem(cmbModelNo.getSelectedItem() + "", "Model_No");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtDescription.setText(salesItem.getItem_Description());
        txtCurrentQty.setText(salesItem.getItem_Qty()+"");
        txtUnitPurchasePrice.setText(salesItem.getReceive_price() + "");
       // txtUnitIssuePrice.setText(salesItem.getIssue_price() + "");
        txtWarranty.setText(salesItem.getWarranty_Period());
    }//GEN-LAST:event_cmbModelNoItemStateChanged

    private void btaddSalesItemtoDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddSalesItemtoDBActionPerformed
        addDB();
        allclear();
    }//GEN-LAST:event_btaddSalesItemtoDBActionPerformed

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        int[] selectedRows = tbSalesItem.getSelectedRows();
        for (int i : selectedRows) {
            dtm.removeRow(i);
        }
    }//GEN-LAST:event_btRemoveActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.setVisible(false);
        pan.removeAll();
        addGRN.setVisible(true);
        pan.add(addGRN);
        pan.revalidate();
    }//GEN-LAST:event_btBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addNewItem = new AddNewItem(cashierMain, pan, this);
        this.setVisible(false);
        pan.removeAll();
        addNewItem.setVisible(true);
        pan.add(addNewItem);
        pan.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btBack;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btaddSalesItemtoDB;
    private javax.swing.JComboBox cmbModelNo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbModelNo;
    private javax.swing.JLabel lbUnitIssuePrice;
    private javax.swing.JLabel lbUnitIssuePrice1;
    private javax.swing.JLabel lbUnitIssuePrice2;
    private javax.swing.JLabel lbUnitPurchasePrice;
    private javax.swing.JLabel lbWarrenty;
    private javax.swing.JTable tbSalesItem;
    private javax.swing.JTextField txtCurrentQty;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtUnitIssuePrice;
    private javax.swing.JTextField txtUnitPurchasePrice;
    private javax.swing.JTextField txtWarranty;
    // End of variables declaration//GEN-END:variables

    private void addDB() {
        try {
                int res=SalesItemControl.updateStock(updatesalesItemList);
                if (res == 1 ) {
                    JOptionPane.showMessageDialog(pan, "Service Order added", "Success", JOptionPane.INFORMATION_MESSAGE);            
                } else {
                    JOptionPane.showMessageDialog(pan, "Service Order Fail", "Fail", JOptionPane.ERROR_MESSAGE);
                }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddStock.class.getName()).log(Level.SEVERE, null, ex);
        }
        updatesalesItemList = new ArrayList<SalesItem>();
    }

    private void addTable() {
        try {
            String modelNo = cmbModelNo.getSelectedItem() + "";
            SalesItem salesItemfill=SalesItemControl.getSalesItem(modelNo, "Model_No");
            String brandName = salesItemfill.getItem_Brand_Name();
            String description = txtDescription.getText();
            double unitPurchasePrice = Double.parseDouble(txtUnitPurchasePrice.getText());
            double unitIssuePrice = Double.parseDouble(txtUnitIssuePrice.getText());
            int qty = Integer.parseInt(txtQty.getText());
            String itemTypeCode = salesItemfill.getItemType_Code();
            int rowcount = tbSalesItem.getRowCount();
            int row = -1;
            for (int i = 0; i < rowcount; i++) {
                if (modelNo.equals(tbSalesItem.getValueAt(i, 0) + "")) {
                    row = i;
                }
            }
            if (row >= 0) {
                qty += Integer.parseInt(tbSalesItem.getValueAt(row, 2) + "");
                tbSalesItem.setValueAt(qty, row, 2);
                tbSalesItem.setValueAt(qty * Integer.parseInt(tbSalesItem.getValueAt(row, 3) + ""), row, 5);
                totalAmount += qty * unitPurchasePrice;
               // txtTotalAmount.setText(totalAmount + "");
                int totalqty = SalesItemControl.getSalesItem(modelNo, "Model_No").getItem_Qty() + qty;
                updatesalesItemList.get(row).setItem_Qty(totalqty);
            } else {
                Object[] ob = {modelNo, description, qty, unitPurchasePrice, unitIssuePrice, qty * unitPurchasePrice};
                dtm.addRow(ob);
                totalAmount += qty * unitPurchasePrice;
                //txtTotalAmount.setText(totalAmount + "");
                int totalqty = SalesItemControl.getSalesItem(modelNo, "Model_No").getItem_Qty() + qty;
        //        SalesItem salesItem = new SalesItem(modelNo, description, brandName, unitPurchasePrice, unitIssuePrice, totalqty, txtWarranty.getText(), itemTypeCode);
        //        updatesalesItemList.add(salesItem);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddGRN.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddGRN.class.getName()).log(Level.SEVERE, null, ex);
        }
        clear();
    }

    private void comboControl() {
        JTextField txt = (JTextField) cmbModelNo.getEditor().getEditorComponent();
        txt.addKeyListener(new KeyAdapter() {

            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    //cmbItemBrandName.requestFocus();
                    //checkEmpty();
                } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
                    //txtSerialNo.requestFocus();
                    //checkEmpty();
                }
            }
        });

    }
    private void clear(){
        FillComboBox.fillComboDatabase(cmbModelNo, "SalesItem", "Model_No");
        txtDescription.setText("");
        txtUnitPurchasePrice.setText("");
        txtUnitIssuePrice.setText("");
        txtWarranty.setText("");
        txtQty.setText("");
        txtCurrentQty.setText("");
    }
    private void allclear(){
        FillComboBox.fillComboDatabase(cmbModelNo, "SalesItem", "Model_No");
        txtDescription.setText("");
        txtUnitPurchasePrice.setText("");
        txtUnitIssuePrice.setText("");
        txtWarranty.setText("");
        txtQty.setText("");
        txtCurrentQty.setText("");
        int rowconut=tbSalesItem.getRowCount();
        for (int i = 0; i < rowconut; i++) {
            dtm.removeRow(0);
        }
        
    }
}
