/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cashier;

import componentControl.AutoGenerate;
import componentControl.ComboSearch;
import componentControl.FillComboBox;
import componentControl.ValidationValues;
import control.SalesItemControl;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.SalesItem;
import model.SalesOrder;
import model.SoldItem;

/**
 *
 * @author Amila
 */
public class Bill extends javax.swing.JPanel {

    CashierMain cashierMain;
    InternalFrame internalFrame;
    JPanel pan;
    DefaultTableModel dtm;
    ArrayList<SoldItem> soldItemList = new ArrayList<SoldItem>();
    ArrayList<SalesItem> salesItemList = new ArrayList<SalesItem>();
    Payment payment;
    double totalAmount = 0.00;

    /**
     * Creates new form Bill
     */
    public Bill(CashierMain cashierMain, JPanel pan) {
        initComponents();
        dtm = (DefaultTableModel) tbSalesItem.getModel();
        txtCashUnitPrice.setText("0.00");
        txtCreditUnitPrice.setText("0.00");
        FillComboBox.fillComboDatabase(cmbModelNo, "SalesItem", "Model_No");
        this.cashierMain = cashierMain;
        this.pan = pan;
        txtSalesOrderID.setText(AutoGenerate.getNextID("SalesOrders", "Order_ID", "OD"));
        comboControl();
        ComboSearch cs = new ComboSearch();
        cs.setSearchableCombo(cmbModelNo, true, "No Model");
        txtCustName.requestFocus();
        checkEmpty();
        txtTotalAmount.setText(totalAmount + "");
    }
    public Bill(InternalFrame internalFrame, JPanel pan) {
        initComponents();
        dtm = (DefaultTableModel) tbSalesItem.getModel();
        txtCashUnitPrice.setText("0.00");
        txtCreditUnitPrice.setText("0.00");
        FillComboBox.fillComboDatabase(cmbModelNo, "SalesItem", "Model_No");
        this.internalFrame=internalFrame;
        this.pan = pan;
        txtSalesOrderID.setText(AutoGenerate.getNextID("SalesOrders", "Order_ID", "OD"));
        comboControl();
        ComboSearch cs = new ComboSearch();
        cs.setSearchableCombo(cmbModelNo, true, "No Model");
        txtCustName.requestFocus();
        checkEmpty();
        txtTotalAmount.setText(totalAmount + "");
    }
    public Bill(CashierMain cashierMain,InternalFrame internalFrame, JPanel pan) {
        initComponents();
        dtm = (DefaultTableModel) tbSalesItem.getModel();
        txtCashUnitPrice.setText("0.00");
        txtCreditUnitPrice.setText("0.00");
        FillComboBox.fillComboDatabase(cmbModelNo, "SalesItem", "Model_No");
        this.cashierMain = cashierMain;
        this.internalFrame=internalFrame;
        this.pan = pan;
        txtSalesOrderID.setText(AutoGenerate.getNextID("SalesOrders", "Order_ID", "OD"));
        comboControl();
        ComboSearch cs = new ComboSearch();
        cs.setSearchableCombo(cmbModelNo, true, "No Model");
        txtCustName.requestFocus();
        checkEmpty();
        txtTotalAmount.setText(totalAmount + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        lbServiceOrderID = new javax.swing.JLabel();
        txtSalesOrderID = new javax.swing.JTextField();
        lbDate = new javax.swing.JLabel();
        lbModelNo = new javax.swing.JLabel();
        cmbModelNo = new javax.swing.JComboBox();
        lbUnitPrice = new javax.swing.JLabel();
        txtCashUnitPrice = new javax.swing.JTextField();
        lbWarrenty = new javax.swing.JLabel();
        txtWarranty = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btAdd = new javax.swing.JButton();
        spitemQty = new javax.swing.JSpinner();
        lbModelNo1 = new javax.swing.JLabel();
        lbDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        lbSerialNo = new javax.swing.JLabel();
        txtCreditUnitPrice = new javax.swing.JTextField();
        cmbcalOrderDate = new org.freixas.jcalendar.JCalendarCombo();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSalesItem = new javax.swing.JTable();
        lbCustAddress2 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        btaddSalesOrder = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbCustomerName = new javax.swing.JLabel();
        lbCustAddress = new javax.swing.JLabel();
        txtCustName = new javax.swing.JTextField();
        txtCustAddress = new javax.swing.JTextField();
        lbContactNo = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);

        jLayeredPane1.add(jLayeredPane3);
        jLayeredPane3.setBounds(30, 280, 0, 0);

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Order Detail"));

        lbServiceOrderID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbServiceOrderID.setText("Order ID");
        jLayeredPane4.add(lbServiceOrderID);
        lbServiceOrderID.setBounds(40, 20, 160, 20);

        txtSalesOrderID.setEditable(false);
        txtSalesOrderID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSalesOrderID.setOpaque(false);
        jLayeredPane4.add(txtSalesOrderID);
        txtSalesOrderID.setBounds(150, 20, 170, 30);

        lbDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDate.setText("Date");
        jLayeredPane4.add(lbDate);
        lbDate.setBounds(560, 20, 70, 20);

        lbModelNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbModelNo.setText("Quantity");
        jLayeredPane4.add(lbModelNo);
        lbModelNo.setBounds(810, 70, 110, 15);

        cmbModelNo.setEditable(true);
        cmbModelNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModelNoItemStateChanged(evt);
            }
        });
        cmbModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModelNoActionPerformed(evt);
            }
        });
        jLayeredPane4.add(cmbModelNo);
        cmbModelNo.setBounds(60, 90, 220, 30);

        lbUnitPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitPrice.setText("Cash Unit Price");
        jLayeredPane4.add(lbUnitPrice);
        lbUnitPrice.setBounds(30, 140, 100, 15);

        txtCashUnitPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCashUnitPrice.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCashUnitPricePropertyChange(evt);
            }
        });
        jLayeredPane4.add(txtCashUnitPrice);
        txtCashUnitPrice.setBounds(130, 140, 160, 30);

        lbWarrenty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbWarrenty.setText("Warranty");
        jLayeredPane4.add(lbWarrenty);
        lbWarrenty.setBounds(620, 140, 100, 15);

        txtWarranty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtWarranty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWarrantyKeyReleased(evt);
            }
        });
        jLayeredPane4.add(txtWarranty);
        txtWarranty.setBounds(710, 140, 180, 30);

        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 2));
        jLayeredPane4.add(jSeparator1);
        jSeparator1.setBounds(40, 60, 630, 2);

        btAdd.setText("Add Table");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });
        jLayeredPane4.add(btAdd);
        btAdd.setBounds(940, 140, 110, 30);

        spitemQty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spitemQty.setOpaque(false);
        spitemQty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spitemQtyStateChanged(evt);
            }
        });
        jLayeredPane4.add(spitemQty);
        spitemQty.setBounds(860, 90, 90, 30);

        lbModelNo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbModelNo1.setText("Model No");
        jLayeredPane4.add(lbModelNo1);
        lbModelNo1.setBounds(40, 70, 170, 15);

        lbDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbDescription.setText("Description");
        jLayeredPane4.add(lbDescription);
        lbDescription.setBounds(300, 70, 140, 20);

        txtDescription.setEditable(false);
        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });
        jLayeredPane4.add(txtDescription);
        txtDescription.setBounds(360, 90, 420, 30);

        lbSerialNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSerialNo.setText("Credit Unit Price");
        jLayeredPane4.add(lbSerialNo);
        lbSerialNo.setBounds(310, 140, 110, 20);

        txtCreditUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreditUnitPriceActionPerformed(evt);
            }
        });
        txtCreditUnitPrice.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCreditUnitPricePropertyChange(evt);
            }
        });
        txtCreditUnitPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCreditUnitPriceKeyReleased(evt);
            }
        });
        jLayeredPane4.add(txtCreditUnitPrice);
        txtCreditUnitPrice.setBounds(420, 140, 170, 30);
        jLayeredPane4.add(cmbcalOrderDate);
        cmbcalOrderDate.setBounds(630, 20, 210, 20);

        jLayeredPane1.add(jLayeredPane4);
        jLayeredPane4.setBounds(10, 180, 1080, 180);
        jLayeredPane1.add(jLayeredPane5);
        jLayeredPane5.setBounds(700, 10, 290, 60);

        jLayeredPane2.setMinimumSize(new java.awt.Dimension(960, 400));
        jLayeredPane2.setPreferredSize(new java.awt.Dimension(960, 500));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tbSalesItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model No", "Description", "Qty", "Unit Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbSalesItem);
        if (tbSalesItem.getColumnModel().getColumnCount() > 0) {
            tbSalesItem.getColumnModel().getColumn(0).setPreferredWidth(150);
            tbSalesItem.getColumnModel().getColumn(1).setPreferredWidth(300);
            tbSalesItem.getColumnModel().getColumn(2).setPreferredWidth(50);
            tbSalesItem.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbSalesItem.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLayeredPane2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 10, 1040, 150);

        lbCustAddress2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbCustAddress2.setText("Total Amount");
        jLayeredPane2.add(lbCustAddress2);
        lbCustAddress2.setBounds(730, 170, 140, 20);

        txtTotalAmount.setEditable(false);
        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTotalAmount.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtTotalAmountPropertyChange(evt);
            }
        });
        jLayeredPane2.add(txtTotalAmount);
        txtTotalAmount.setBounds(860, 170, 190, 30);

        btaddSalesOrder.setText("Submit");
        btaddSalesOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddSalesOrderActionPerformed(evt);
            }
        });
        jLayeredPane2.add(btaddSalesOrder);
        btaddSalesOrder.setBounds(960, 220, 110, 30);

        btRemove.setText("Remove");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });
        jLayeredPane2.add(btRemove);
        btRemove.setBounds(20, 170, 100, 23);

        jLayeredPane1.add(jLayeredPane2);
        jLayeredPane2.setBounds(10, 380, 1080, 260);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Detail"));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbCustomerName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCustomerName.setText("Customer Name");
        jPanel1.add(lbCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 130, 20));

        lbCustAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCustAddress.setText("Customer Address");
        jPanel1.add(lbCustAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 140, 20));

        txtCustName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustNameActionPerformed(evt);
            }
        });
        txtCustName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustNameKeyReleased(evt);
            }
        });
        jPanel1.add(txtCustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 380, 30));

        txtCustAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustAddressActionPerformed(evt);
            }
        });
        txtCustAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustAddressKeyReleased(evt);
            }
        });
        jPanel1.add(txtCustAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 630, 30));

        lbContactNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbContactNo.setText("Contact No");
        jPanel1.add(lbContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 100, 20));

        txtContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactNoActionPerformed(evt);
            }
        });
        txtContactNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactNoKeyReleased(evt);
            }
        });
        jPanel1.add(txtContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 230, 30));

        jLayeredPane1.add(jPanel1);
        jPanel1.setBounds(10, 70, 1080, 120);

        jLabel1.setFont(new java.awt.Font("Andalus", 1, 32)); // NOI18N
        jLabel1.setText("Sales Invoice");
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(60, 10, 250, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbModelNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModelNoItemStateChanged
        SalesItem salesItem = new SalesItem();
        try {
            salesItem = SalesItemControl.getSalesItem(cmbModelNo.getSelectedItem() + "", "Model_No");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtDescription.setText(salesItem.getItem_Description());
        txtCashUnitPrice.setText(salesItem.getCash_Issue_price() + "");
        txtCreditUnitPrice.setText(salesItem.getCredit_Issue_price() + "");
        txtWarranty.setText(salesItem.getWarranty_Period());
    }//GEN-LAST:event_cmbModelNoItemStateChanged

    private void btaddSalesOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddSalesOrderActionPerformed
        addOrder();
    }//GEN-LAST:event_btaddSalesOrderActionPerformed

    private void txtCustAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustAddressActionPerformed

    private void txtContactNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactNoActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        addTable();
        checkbt();
        checkEmpty();
    }//GEN-LAST:event_btAddActionPerformed

    private void txtCreditUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreditUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditUnitPriceActionPerformed

    private void txtCashUnitPricePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCashUnitPricePropertyChange
        ValidationValues.ValidateCurrency(txtCashUnitPrice);
    }//GEN-LAST:event_txtCashUnitPricePropertyChange

    private void txtTotalAmountPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtTotalAmountPropertyChange
        ValidationValues.ValidateCurrency(txtTotalAmount);
    }//GEN-LAST:event_txtTotalAmountPropertyChange

    private void txtCustNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustNameActionPerformed

    private void spitemQtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spitemQtyStateChanged
       
    }//GEN-LAST:event_spitemQtyStateChanged

    private void txtCustNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustNameKeyReleased
        ValidationValues.ValidateSingleKoto(txtCustName);
        checkbt();
    }//GEN-LAST:event_txtCustNameKeyReleased

    private void txtContactNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactNoKeyReleased
        ValidationValues.ValidateSingleKoto(txtContactNo);
        checkbt();
    }//GEN-LAST:event_txtContactNoKeyReleased

    private void txtCustAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustAddressKeyReleased
       ValidationValues.ValidateSingleKoto(txtCustAddress);
       checkbt();
    }//GEN-LAST:event_txtCustAddressKeyReleased

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        int[] selectedRows = tbSalesItem.getSelectedRows();
        for (int i : selectedRows) {
            soldItemList.remove(i);
            salesItemList.remove(i);
            dtm.removeRow(i);
        }
    }//GEN-LAST:event_btRemoveActionPerformed

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void txtCreditUnitPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditUnitPriceKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addTable();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            cmbModelNo.requestFocus();
            checkEmpty();
        }
        checkbt();
    }//GEN-LAST:event_txtCreditUnitPriceKeyReleased

    private void txtCreditUnitPricePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCreditUnitPricePropertyChange
         ValidationValues.ValidateCurrency(txtCreditUnitPrice);
    }//GEN-LAST:event_txtCreditUnitPricePropertyChange

    private void cmbModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModelNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModelNoActionPerformed

    private void txtWarrantyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWarrantyKeyReleased
        ValidationValues.ValidateSingleKoto(txtWarranty);
    }//GEN-LAST:event_txtWarrantyKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btaddSalesOrder;
    private javax.swing.JComboBox cmbModelNo;
    private org.freixas.jcalendar.JCalendarCombo cmbcalOrderDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbContactNo;
    private javax.swing.JLabel lbCustAddress;
    private javax.swing.JLabel lbCustAddress2;
    private javax.swing.JLabel lbCustomerName;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbModelNo;
    private javax.swing.JLabel lbModelNo1;
    private javax.swing.JLabel lbSerialNo;
    private javax.swing.JLabel lbServiceOrderID;
    private javax.swing.JLabel lbUnitPrice;
    private javax.swing.JLabel lbWarrenty;
    private javax.swing.JSpinner spitemQty;
    private javax.swing.JTable tbSalesItem;
    private javax.swing.JTextField txtCashUnitPrice;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtCreditUnitPrice;
    private javax.swing.JTextField txtCustAddress;
    private javax.swing.JTextField txtCustName;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtSalesOrderID;
    private javax.swing.JTextField txtTotalAmount;
    private javax.swing.JTextField txtWarranty;
    // End of variables declaration//GEN-END:variables

    private void addTable() {
        String serialNo="";
        String modelNo = cmbModelNo.getSelectedItem() + "";
        double unitPrice = Double.parseDouble(txtCashUnitPrice.getText());
        int qty = Integer.parseInt(spitemQty.getValue() + "");
        SalesItem salesItem = new SalesItem();
        try {
            salesItem = SalesItemControl.getSalesItem(modelNo, "Model_No");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        }
        String description = salesItem.getItem_Description();
        for (int i = 0; i < qty; i++) {
            serialNo = JOptionPane.showInputDialog(Bill.this, "Please Enter Item Serial No", "Invoice",JOptionPane.OK_OPTION);
            SoldItem soldItem = new SoldItem(serialNo, modelNo, description, salesItem.getItem_Brand_Name(), salesItem.getReceive_price(), unitPrice, 1, 1 * unitPrice, txtWarranty.getText(), txtSalesOrderID.getText());
            soldItemList.add(soldItem);
        }
        
        salesItem.setItem_Qty(salesItem.getItem_Qty() - qty);
        Object[] ob = {modelNo, description, qty, unitPrice, qty * unitPrice};
        dtm.addRow(ob);
        totalAmount += qty * unitPrice;
        txtTotalAmount.setText(totalAmount + "");  
        salesItemList.add(salesItem);
        checkbt();
    }

    private void addOrder() {
        String custID = AutoGenerate.getNextID("Customer", "Cust_ID", "CU");
        Customer customer = new Customer(custID, txtCustName.getText(), txtCustAddress.getText(), txtContactNo.getText());
        SalesOrder salesOrder = new SalesOrder(txtSalesOrderID.getText(), setDateTime(), totalAmount, Double.parseDouble(txtTotalAmount.getText()), custID,null);
        Map<String, Object> orderList = new HashMap<String, Object>();
        orderList.put("Customer", customer);
        orderList.put("SalesOrder", salesOrder);
        orderList.put("SoldItemList", soldItemList);
        orderList.put("SalesItemList", salesItemList);
        payment = new Payment(cashierMain, pan, orderList, this);
        pan.removeAll();
        payment.setVisible(true);
        pan.add(payment);
        pan.revalidate();
    }

    private String setDateTime() {
        SimpleDateFormat SDF = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String Date = SDF.format(cmbcalOrderDate.getDate());
        System.out.println(Date);
        return Date;
    }

    private void comboControl() {


        JTextField txt1 = (JTextField) cmbModelNo.getEditor().getEditorComponent();
        txt1.addKeyListener(new KeyAdapter() {

            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    SalesItem salesItem = new SalesItem();
                    try {
                        salesItem = SalesItemControl.getSalesItem(cmbModelNo.getSelectedItem() + "", "Model_No");
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    txtCashUnitPrice.setText(salesItem.getCash_Issue_price() + "");
                    txtCreditUnitPrice.setText(salesItem.getCredit_Issue_price() + "");
                    txtWarranty.setText(salesItem.getWarranty_Period());
                    spitemQty.requestFocus();
                    checkEmpty();
                } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
                    txtCustAddress.requestFocus();
                    checkEmpty();
                }
            }
        });


    }

    private void checkEmpty() {
        if (tbSalesItem.getRowCount() == 0) {
            btaddSalesOrder.setEnabled(false);
        } else {
            btaddSalesOrder.setEnabled(true);
        }
    }

    public void clear() {
        txtCustName.setText("");
        txtCustAddress.setText("");
        txtContactNo.setText("");
        txtCreditUnitPrice.setText("0.00");
        txtCashUnitPrice.setText("0.00");
        txtWarranty.setText("");
        txtSalesOrderID.setText(AutoGenerate.getNextID("SalesOrders", "Order_ID", "OD"));
        totalAmount = 0.00;
        txtTotalAmount.setText(totalAmount + "");
        int rowcount=tbSalesItem.getRowCount();
        for (int i = 0; i < rowcount; i++) {
            dtm.removeRow(0);
        }
        soldItemList = new ArrayList<SoldItem>();
        salesItemList = new ArrayList<SalesItem>();
    }

    private void checkbt() {
        if (txtCustName.getText().trim().isEmpty() || txtCustAddress.getText().trim().isEmpty()) {
            btAdd.setEnabled(false);
        } else {
            btAdd.setEnabled(true);
        }
        if (txtCustName.getText().trim().isEmpty() || txtCustAddress.getText().trim().isEmpty() || soldItemList.isEmpty()) {
            btaddSalesOrder.setEnabled(false);
        } else {
            btaddSalesOrder.setEnabled(true);
        }
    }
 }
