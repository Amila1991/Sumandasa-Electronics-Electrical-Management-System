/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddServiceOrder.java
 *
 * Created on Feb 8, 2012, 10:16:06 PM
 */

package cashier;

import componentControl.AutoGenerate;
import componentControl.ValidationValues;
import control.ServiceOrderControl;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import jobDetail.AddJobDetail;
import model.Customer;
import model.ServiceItem;
import model.ServiceOrder;
import printreport.ReportControl;

/**
 *
 * @author Amila Karunathilaka
 */
public class AddServiceOrder extends javax.swing.JPanel {
    CashierMain cashierMain;
    InternalFrame internalFrame;
    AddJobDetail addJobDetail;
    JPanel pan;
    /** Creates new form AddServiceOrder */
    public AddServiceOrder(CashierMain cashierMain,JPanel pan) {
        initComponents();
        this.cashierMain=cashierMain;
        this.pan=pan;
        txtServiceOrderID.setText(AutoGenerate.getNextID("ServiceOrder", "Service_Order_ID", "SO"));
        comboControl(cmbItemBrandName);
       // checkEmpty();
        txtCustName.requestFocus();
    }
    public AddServiceOrder(CashierMain cashierMain,InternalFrame internalFrame,JPanel pan) {
        initComponents();
        this.cashierMain=cashierMain;
        this.internalFrame=internalFrame;
        this.pan=pan;
        txtServiceOrderID.setText(AutoGenerate.getNextID("ServiceOrder", "Service_Order_ID", "SO"));
        comboControl(cmbItemBrandName);
       // checkEmpty();
        txtCustName.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        btaddServiceOrder = new javax.swing.JButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lbCustName = new javax.swing.JLabel();
        lbCustAddress = new javax.swing.JLabel();
        txtCustName = new javax.swing.JTextField();
        lbContactNo = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        txtCustAddress = new javax.swing.JTextField();
        lbWarning = new javax.swing.JLabel();
        lbItemModelNo = new javax.swing.JLabel();
        txtModelNo = new javax.swing.JTextField();
        lbItemSerialNo = new javax.swing.JLabel();
        txtSerialNo = new javax.swing.JTextField();
        lbItemBrandName = new javax.swing.JLabel();
        cmbItemBrandName = new javax.swing.JComboBox();
        lbItemDescrription = new javax.swing.JLabel();
        txtItemDescription = new javax.swing.JTextField();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        lbServiceOrderID = new javax.swing.JLabel();
        txtServiceOrderID = new javax.swing.JTextField();
        lbDate = new javax.swing.JLabel();
        cmbcalOrderDate = new org.freixas.jcalendar.JCalendarCombo();
        jLayeredPane5 = new javax.swing.JLayeredPane();

        setOpaque(false);

        btaddServiceOrder.setText("Add Job");
        btaddServiceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddServiceOrderActionPerformed(evt);
            }
        });
        btaddServiceOrder.setBounds(950, 520, 120, 40);
        jLayeredPane1.add(btaddServiceOrder, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbCustName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCustName.setText("Customer Name");
        lbCustName.setBounds(60, 40, 150, 15);
        jLayeredPane2.add(lbCustName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbCustAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCustAddress.setText("Customer Address");
        lbCustAddress.setBounds(60, 80, 170, 15);
        jLayeredPane2.add(lbCustAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtCustName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCustNameFocusGained(evt);
            }
        });
        txtCustName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustNameKeyReleased(evt);
            }
        });
        txtCustName.setBounds(250, 40, 320, 25);
        jLayeredPane2.add(txtCustName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbContactNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbContactNo.setText("Contact No.");
        lbContactNo.setBounds(60, 120, 140, 15);
        jLayeredPane2.add(lbContactNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtContactNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContactNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtContactNoFocusLost(evt);
            }
        });
        txtContactNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactNoKeyReleased(evt);
            }
        });
        txtContactNo.setBounds(250, 120, 220, 25);
        jLayeredPane2.add(txtContactNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtCustAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCustAddressFocusGained(evt);
            }
        });
        txtCustAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustAddressKeyReleased(evt);
            }
        });
        txtCustAddress.setBounds(250, 80, 590, 25);
        jLayeredPane2.add(txtCustAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbWarning.setForeground(new java.awt.Color(255, 0, 0));
        lbWarning.setBounds(490, 120, 280, 20);
        jLayeredPane2.add(lbWarning, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbItemModelNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemModelNo.setText("Model No ");
        lbItemModelNo.setBounds(60, 190, 150, 15);
        jLayeredPane2.add(lbItemModelNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtModelNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtModelNoKeyReleased(evt);
            }
        });
        txtModelNo.setBounds(250, 190, 280, 25);
        jLayeredPane2.add(txtModelNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbItemSerialNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemSerialNo.setText("Serial No");
        lbItemSerialNo.setBounds(60, 230, 120, 15);
        jLayeredPane2.add(lbItemSerialNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtSerialNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerialNoKeyReleased(evt);
            }
        });
        txtSerialNo.setBounds(250, 230, 280, 25);
        jLayeredPane2.add(txtSerialNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbItemBrandName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemBrandName.setText("Item Brand Name");
        lbItemBrandName.setBounds(60, 270, 150, 15);
        jLayeredPane2.add(lbItemBrandName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbItemBrandName.setEditable(true);
        cmbItemBrandName.setBounds(250, 270, 210, 25);
        jLayeredPane2.add(cmbItemBrandName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbItemDescrription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemDescrription.setText("Item Descrription");
        lbItemDescrription.setBounds(60, 310, 150, 15);
        jLayeredPane2.add(lbItemDescrription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtItemDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemDescriptionKeyReleased(evt);
            }
        });
        txtItemDescription.setBounds(250, 310, 570, 25);
        jLayeredPane2.add(txtItemDescription, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(50, 140, 1000, 360);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setBounds(30, 280, 0, 0);
        jLayeredPane1.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbServiceOrderID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbServiceOrderID.setText("Service Order ID");
        lbServiceOrderID.setBounds(40, 10, 160, 20);
        jLayeredPane4.add(lbServiceOrderID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtServiceOrderID.setEditable(false);
        txtServiceOrderID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtServiceOrderID.setOpaque(false);
        txtServiceOrderID.setBounds(230, 10, 160, 25);
        jLayeredPane4.add(txtServiceOrderID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lbDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDate.setText("Date");
        lbDate.setBounds(560, 10, 70, 20);
        jLayeredPane4.add(lbDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbcalOrderDate.setEnabled(false);
        cmbcalOrderDate.setBounds(620, 10, 240, 30);
        jLayeredPane4.add(cmbcalOrderDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBounds(20, 70, 960, 50);
        jLayeredPane1.add(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 60, 400, new javax.swing.ImageIcon(getClass().getResource("/pictures/cashier/New Service Order.png")))); // NOI18N
        jLayeredPane5.setBounds(0, 0, 290, 60);
        jLayeredPane1.add(jLayeredPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btaddServiceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddServiceOrderActionPerformed
        int i=JOptionPane.showConfirmDialog(pan, "Do you want add Service Order", "Confirm Service Order", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(i==0){
            addServiceOrderCashier();
            clear();
           // checkEmpty();
        }
    }//GEN-LAST:event_btaddServiceOrderActionPerformed

    private void txtCustNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustNameKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_DOWN||evt.getKeyCode()==KeyEvent.VK_ENTER) {
            txtCustAddress.requestFocus();
        }
       // checkEmpty();
    }//GEN-LAST:event_txtCustNameKeyReleased

    private void txtContactNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactNoKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_DOWN||evt.getKeyCode()==KeyEvent.VK_ENTER) {
            txtModelNo.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtCustAddress.requestFocus();
        }
        //checkEmpty();
        ValidationValues.ValidateTPCount(txtContactNo);
    }//GEN-LAST:event_txtContactNoKeyReleased

    private void txtCustNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustNameFocusGained
        txtCustName.selectAll();
    }//GEN-LAST:event_txtCustNameFocusGained

    private void txtContactNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactNoFocusGained
        txtContactNo.selectAll();
    }//GEN-LAST:event_txtContactNoFocusGained

    private void txtCustAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustAddressKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtContactNo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtCustName.requestFocus();
        }
        //checkEmpty();
    }//GEN-LAST:event_txtCustAddressKeyReleased

    private void txtCustAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustAddressFocusGained
        txtCustAddress.selectAll();
    }//GEN-LAST:event_txtCustAddressFocusGained

    private void txtModelNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelNoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtSerialNo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtContactNo.requestFocus();
        }
        //checkEmpty();
    }//GEN-LAST:event_txtModelNoKeyReleased

    private void txtSerialNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialNoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cmbItemBrandName.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtModelNo.requestFocus();
        }
        //checkEmpty();
    }//GEN-LAST:event_txtSerialNoKeyReleased

    private void txtItemDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemDescriptionKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
           // txtContactNo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            cmbItemBrandName.requestFocus();
        }
        //checkEmpty();
    }//GEN-LAST:event_txtItemDescriptionKeyReleased

    private void txtContactNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactNoFocusLost
        ValidationValues.ValidateTP(txtContactNo, lbWarning);
        if (!lbWarning.getText().trim().isEmpty()) {
            txtContactNo.requestFocus();
        }
    }//GEN-LAST:event_txtContactNoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btaddServiceOrder;
    private javax.swing.JComboBox cmbItemBrandName;
    private org.freixas.jcalendar.JCalendarCombo cmbcalOrderDate;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLabel lbContactNo;
    private javax.swing.JLabel lbCustAddress;
    private javax.swing.JLabel lbCustName;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbItemBrandName;
    private javax.swing.JLabel lbItemDescrription;
    private javax.swing.JLabel lbItemModelNo;
    private javax.swing.JLabel lbItemSerialNo;
    private javax.swing.JLabel lbServiceOrderID;
    private javax.swing.JLabel lbWarning;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtCustAddress;
    private javax.swing.JTextField txtCustName;
    private javax.swing.JTextField txtItemDescription;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtSerialNo;
    private javax.swing.JTextField txtServiceOrderID;
    // End of variables declaration//GEN-END:variables

    private void addServiceOrderCashier() {
        String custID=AutoGenerate.getNextID("Customer", "Cust_ID", "CU");
        Customer customer=new Customer(custID, txtCustName.getText().trim(), txtCustAddress.getText().trim(), txtContactNo.getText());
        ServiceOrder serviceOrder=new ServiceOrder(txtServiceOrderID.getText(),null, setDateTime(), null, 0.00, custID);
        ServiceItem item=new ServiceItem(AutoGenerate.getNextID("ServiceItem", "Item_Code", "I"), txtItemDescription.getText().trim(),txtModelNo.getText().trim(),txtSerialNo.getText().trim(),cmbItemBrandName.getSelectedItem()+"".trim(),0.00, null,false,txtServiceOrderID.getText());
        Map<String, Object> orderList = new HashMap<String, Object>();
        orderList.put("Customer", customer);
        orderList.put("ServiceOrder", serviceOrder);
        orderList.put("ServiceItem", item);
        addJobDetail=new AddJobDetail(cashierMain, pan, orderList, this);
        pan.removeAll();
        addJobDetail.setVisible(true);
        pan.add(addJobDetail);
        pan.revalidate();
        //orderList.put("SalesOrder", salesOrder);
        /* try {
           int res=ServiceOrderControl.addServiceOrder(customer, serviceOrder, item);
           if(res==1){
               JOptionPane.showMessageDialog(pan, "Service Order added", "Success", JOptionPane.INFORMATION_MESSAGE);
               Map<String,Object> reportParamData=new HashMap<String, Object>();
               reportParamData.put("ServiceOrder", txtServiceOrderID.getText());
               reportParamData.put("CustName", txtCustName.getText());
               reportParamData.put("CustAddress", txtCustAddress.getText());
               reportParamData.put("Contact", txtContactNo.getText());
               reportParamData.put("SerialNo", txtSerialNo.getText());
               reportParamData.put("ModelNo", txtModelNo.getText());
               reportParamData.put("Description", txtItemDescription.getText());
               ReportControl.ServiceOrderReport(reportParamData);
           }else{
               JOptionPane.showMessageDialog(pan, "Service Order Fail", "Fail", JOptionPane.ERROR_MESSAGE);
           }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddServiceOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddServiceOrder.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }
    private String setDateTime(){
       SimpleDateFormat SDF=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
       String Date=SDF.format(cmbcalOrderDate.getDate());
       System.out.println(Date);
       return Date;
    }

    private void clear(){
        txtCustName.setText("");
        txtCustAddress.setText("");
        txtContactNo.setText("");
        txtServiceOrderID.setText(AutoGenerate.getNextID("ServiceOrder", "Service_Order_ID", "SO"));
        txtModelNo.setText("");
        txtSerialNo.setText("");
        txtItemDescription.setText("");
        cmbcalOrderDate.setDate(Calendar.getInstance().getTime());
       // checkEmpty();
    }

    private void checkEmpty(){
        if(txtCustName.getText().trim().isEmpty()||txtCustAddress.getText().trim().isEmpty()||txtContactNo.getText().trim().isEmpty()||txtModelNo.getText().trim().isEmpty()||txtSerialNo.getText().trim().isEmpty()||txtItemDescription.getText().trim().isEmpty()){
            btaddServiceOrder.setEnabled(false);
        }else{
            btaddServiceOrder.setEnabled(true);
        }
    }
    
    private void comboControl(JComboBox controlcmb){
        JTextField txt = (JTextField) controlcmb.getEditor().getEditorComponent();
        txt.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER||evt.getKeyCode()==KeyEvent.VK_RIGHT) {
                    txtItemDescription.requestFocus();
                }else if(evt.getKeyCode()==KeyEvent.VK_LEFT){
                    txtSerialNo.requestFocus();
                }
            }
        });
    }
}

